// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCar.Data.Concrete.EfCore;

namespace RentCar.Data.Migrations
{
    [DbContext(typeof(RentCarContext))]
    partial class RentCarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentCar.Entity.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarModel");

                    b.Property<string>("CarName");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("InputDate");

                    b.Property<DateTime>("OutputDate");

                    b.Property<int>("Price");

                    b.Property<DateTime>("SaveTime");

                    b.Property<bool>("isRent");

                    b.HasKey("CarId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RentCar.Entity.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CarCount");

                    b.Property<string>("City");

                    b.Property<string>("CompanyName");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("RentCar.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerSurname");

                    b.Property<int>("ForRentId");

                    b.Property<int>("Number");

                    b.Property<int>("Password");

                    b.Property<DateTime>("SaveTime");

                    b.Property<string>("email");

                    b.HasKey("CustomerId");

                    b.HasIndex("ForRentId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RentCar.Entity.ForRent", b =>
                {
                    b.Property<int>("ForRentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId");

                    b.Property<int>("FisrtKm");

                    b.Property<int>("LastKm");

                    b.Property<int>("ReceivedFee");

                    b.Property<DateTime>("RentDate");

                    b.Property<DateTime>("SaveTime");

                    b.HasKey("ForRentId");

                    b.HasIndex("CarId");

                    b.ToTable("ForRents");
                });

            modelBuilder.Entity("RentCar.Entity.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CompanyId");

                    b.Property<int>("Number");

                    b.Property<int>("Password");

                    b.Property<DateTime>("SaveTime");

                    b.Property<string>("WorkerName");

                    b.Property<string>("WorkerSurname");

                    b.Property<string>("email");

                    b.HasKey("WorkerId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("RentCar.Entity.Car", b =>
                {
                    b.HasOne("RentCar.Entity.Company", "Company")
                        .WithMany("Cars")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentCar.Entity.Customer", b =>
                {
                    b.HasOne("RentCar.Entity.ForRent", "ForRent")
                        .WithMany()
                        .HasForeignKey("ForRentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentCar.Entity.ForRent", b =>
                {
                    b.HasOne("RentCar.Entity.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentCar.Entity.Worker", b =>
                {
                    b.HasOne("RentCar.Entity.Company", "Company")
                        .WithMany("Workers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
